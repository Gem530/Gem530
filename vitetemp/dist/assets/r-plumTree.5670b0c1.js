var t=Object.defineProperty,e=Object.defineProperties,a=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,r=(e,a,n)=>a in e?t(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,h=(t,e)=>{for(var a in e||(e={}))s.call(e,a)&&r(t,a,e[a]);if(n)for(var a of n(e))o.call(e,a)&&r(t,a,e[a]);return t},l=(t,n)=>e(t,a(n));import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";import{d as c,a as g,r as p,l as d,o as m,e as u,m as f,f as y}from"./@vue.fb42abb7.js";var v=i(c(l(h({},{name:"g-plum-tree"}),{setup(t){const e=g(),a=g(),n=p({canvas:null,ctx:null,width:0,height:0,deepMax:3,lineLength:3,point:{x:0,y:0},pendingTasks:[],frameCount:0});d((()=>{n.canvas=a,n.ctx=n.canvas.getContext("2d"),n.width=e.value.clientWidth,n.height=e.value.clientHeight,n.canvas.width=n.width,n.canvas.height=n.height;const t={x:c(200,n.width-200),y:0};o(t,"top");const r={x:c(200,n.width-200),y:n.height};o(r,"bottom");const h={x:0,y:c(200,n.height-200)};o(h,"left");const l={x:n.width,y:c(200,n.height-200)};o(l,"right"),s()}));const s=()=>{requestAnimationFrame((()=>{n.frameCount+=1,n.frameCount%3==0&&(()=>{const t=[...n.pendingTasks];n.pendingTasks.length=0,t.forEach((t=>t()))})(),s()}))},o=(t,e)=>{const a="top"===e?Math.PI/2:"bottom"===e?-Math.PI/2:"left"===e?Math.PI/16:Math.PI,s={start:t,length:n.lineLength,angle:a};r(s)},r=(t,e=0)=>{const a=i(t);h(t),(e<n.deepMax||Math.random()<.5)&&n.pendingTasks.push((()=>{r({start:a,length:n.lineLength+c(1,5),angle:t.angle-.3*Math.random()},e+=1)})),(e<n.deepMax||Math.random()<.5)&&n.pendingTasks.push((()=>{r({start:a,length:n.lineLength+c(1,5),angle:t.angle+.3*Math.random()},e+=1)}))},h=t=>{const{start:e,length:a,angle:n}=t,s=i(t);l(e,s)},l=(t,e)=>{const a=n.ctx;a.beginPath(),a.moveTo(t.x,t.y);const s=c(200,255),o=c(200,255),r=c(200,255);a.strokeStyle=`rgb(${s},${o},${r})`,a.lineWidth=1,a.lineTo(e.x,e.y),a.stroke()},i=t=>{const{start:e,length:a,angle:n}=t;return{x:e.x+a*Math.cos(n),y:e.y+a*Math.sin(n)}},c=(t,e)=>Math.floor(Math.random()*(e-t)+t);return(t,n)=>(m(),u("div",{class:"component theme",ref_key:"box",ref:e},[f("canvas",{class:"myCanvasPlum",ref_key:"myCanvasPlum",ref:a},null,512)],512))}})),[["__scopeId","data-v-769dc45e"]]);const b={class:"contanir theme"},x=c(l(h({},{name:"plumTree"}),{setup:t=>(d((()=>{})),(t,e)=>(m(),u("div",b,[y(v)])))}));export{x as default};
